name: DropGox CI/CD

on:
  push:
    branches:
      - main
      - develop
    tags:
      - "v*.*.*"  # Matches version tags like v1.0.0, v2.1.5, etc.
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build & Test in Docker
    runs-on: debian  # Uses self-hosted runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build DropGox in Docker
        run: |
          docker run --rm -v $(pwd):/app -w /app golang:1.24.0 bash -c "
            go mod tidy &&
            go build -o dropgox-backend main.go
          "

  docker:
    name: Build & Push Docker Image
    runs-on: debian
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Verify Dockerfile Exists
        run: |
          if [ ! -f Dockerfile ]; then
            echo "ERROR: Dockerfile is missing! Add it to the root of your repository."
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Docker Image Version
        id: vars
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            VERSION="latest"
          else
            VERSION="dev"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Docker Image Tag: $VERSION"

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dropgox:$VERSION .
          docker push ${{ secrets.DOCKER_USERNAME }}/dropgox:$VERSION
